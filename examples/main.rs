use tcpip_rs::tcp::read_tcp_packet;

// fn main() {
//     recv_packet(Box::from("host2-host1"));
// }


fn main() {
    let syn: [u8; 40] = [
        0x83, 0xa0, 0x27, 0x10, 0x4b, 0xaf, 0x40, 0x68,
        0x00, 0x00, 0x00, 0x00, 0xa0, 0x02, 0xfa, 0xf0,
        0x7d, 0x87, 0x00, 0x00, 0x02, 0x04, 0x05, 0xb4,
        0x04, 0x02, 0x08, 0x0a, 0x99, 0xdf, 0x7b, 0x8a,
        0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x07
    ];

    let syn_ack: [u8; 40] = [
        0x27, 0x10, 0x83, 0xa0, 0x99, 0x04, 0xa4, 0x55,
        0x4b, 0xaf, 0x40, 0x69, 0xa0, 0x12, 0xfe, 0x88,
        0xa0, 0x00, 0x00, 0x00, 0x02, 0x04, 0x05, 0xb4,
        0x04, 0x02, 0x08, 0x0a, 0x70, 0xa9, 0x2b, 0xda,
        0x99, 0xdf, 0x7b, 0x8a, 0x01, 0x03, 0x03, 0x07
    ];

    let ack: [u8; 32] = [
        0x83, 0xa0, 0x27, 0x10, 0x4b, 0xaf, 0x40, 0x69,
        0x99, 0x04, 0xa4, 0x56, 0x80, 0x10, 0x01, 0xf6,
        0xcb, 0x5f, 0x00, 0x00, 0x01, 0x01, 0x08, 0x0a,
        0x99, 0xdf, 0x7b, 0x8a, 0x70, 0xa9, 0x2b, 0xda
    ];

    read_tcp_packet(Vec::from(syn));
    read_tcp_packet(Vec::from(syn_ack));
    read_tcp_packet(Vec::from(ack));
}